const ANIMATION_THRESHOLD=.1,ANIMATION_ROOT_MARGIN="0px 0px -50px 0px";export function initAnimations(){fadeInElements(),slideInElements()}export function fadeInElements(){const e=document.querySelectorAll(".fade-in");if(0===e.length)return;const s=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("visible"),s.unobserve(e.target))})},{threshold:.1,rootMargin:"0px 0px -50px 0px"});e.forEach(e=>{s.observe(e)})}export function slideInElements(){const e=document.querySelectorAll(".slide-in-left, .slide-in-right, .slide-in-up, .slide-in-down");if(0===e.length)return;const s=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("visible"),s.unobserve(e.target))})},{threshold:.1,rootMargin:"0px 0px -50px 0px"});e.forEach(e=>{s.observe(e)})}export class AnimationManager{constructor(e={}){this.config={threshold:.1,rootMargin:"0px 0px -50px 0px",...e},this.observers=new Map,this.animatedElements=new Set}init(){this.setupFadeInAnimations(),this.setupSlideInAnimations(),this.setupMutationObserver()}setupFadeInAnimations(){const e=document.querySelectorAll(".fade-in");if(0===e.length)return;const s=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("visible"),this.animatedElements.add(e.target),s.unobserve(e.target))})},this.config);e.forEach(e=>{s.observe(e)}),this.observers.set("fade",s)}setupSlideInAnimations(){const e=document.querySelectorAll(".slide-in-left, .slide-in-right, .slide-in-up, .slide-in-down");if(0===e.length)return;const s=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("visible"),this.animatedElements.add(e.target),s.unobserve(e.target))})},this.config);e.forEach(e=>{s.observe(e)}),this.observers.set("slide",s)}setupMutationObserver(){const e=new MutationObserver(e=>{e.forEach(e=>{e.addedNodes.length&&e.addedNodes.forEach(e=>{1===e.nodeType&&this.handleNewElement(e)})})});e.observe(document.body,{childList:!0,subtree:!0}),this.observers.set("mutation",e)}handleNewElement(e){if(this.animatedElements.has(e))return;const s=e.classList.contains("fade-in"),t=e.classList.contains("slide-in-left")||e.classList.contains("slide-in-right")||e.classList.contains("slide-in-up")||e.classList.contains("slide-in-down");s&&this.observers.has("fade")?this.observers.get("fade").observe(e):t&&this.observers.has("slide")&&this.observers.get("slide").observe(e)}animateElement(e,s){this.animatedElements.has(e)||(e.classList.add("visible"),this.animatedElements.add(e))}resetElementAnimation(e){e.classList.remove("visible"),this.animatedElements.delete(e);const s=e.classList.contains("fade-in"),t=e.classList.contains("slide-in-left")||e.classList.contains("slide-in-right")||e.classList.contains("slide-in-up")||e.classList.contains("slide-in-down");s&&this.observers.has("fade")?this.observers.get("fade").observe(e):t&&this.observers.has("slide")&&this.observers.get("slide").observe(e)}disconnect(){this.observers.forEach(e=>e.disconnect())}}
//# sourceMappingURL=animations.min.js.map